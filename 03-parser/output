(prog (varDef Int x) ; (varDef Int y = (expr x)) ; (funcDef Int inc ( Int x ) (block { (expr (expr x) + (expr 1)) ; })) ; (expr x = (expr inc ( (expr y) ))) ; (expr print_float ( (expr mult ( (expr x) , (expr y) )) )) ; (funcDef Float mult ( Float x , Float y ) (block { (expr (expr x) + (expr (expr y) * (expr 2.5))) ; })) ; (varDef Bool b = (expr (expr x) == (expr x))) ; (expr print_bool ( (expr b) )) ; (expr x = (expr if (expr b) then (expr 5) else (expr 7) fi)) ; (expr print_int ( (expr x) )) ; (funcDef Int factorial ( Int n ) (block { (varDef Int p = (expr 1)) ; (varDef Int i) ; (expr for (expr i = (expr 1)) , (expr (expr i) <= (expr n)) , (expr i = (expr (expr i) + (expr 1))) do (block { (expr p = (expr (expr p) * (expr i))) ; (expr print_int ( (expr p) )) ; })) ; (expr p) ; })) ; (expr print_int ( (expr factorial ( (expr 5) )) )) ; <EOF>)